require 'rake'

################################################################################################
# constants

ROOT_DIR = File.expand_path('.')
SHOEBOX_TEMPLATE_WORKING_DIR = File.join(ROOT_DIR, '_shoeboxtemplate')
SHOEBOX_TEMPLATE_WORKING_DIR_SHARED = File.join(SHOEBOX_TEMPLATE_WORKING_DIR, 'shared')
STORE_TEMPLATE_WORKING_DIR = File.join(ROOT_DIR, '_storetemplate')
STORE_TEMPLATE_WORKING_DIR_WINDOW = File.join(STORE_TEMPLATE_WORKING_DIR, 'window.xhtml')
STORE_TEMPLATE_WORKING_DIR_SHARED = File.join(STORE_TEMPLATE_WORKING_DIR, 'shared')
STORE_TEMPLATE_WORKING_DIR_SHARED_CSS = File.join(STORE_TEMPLATE_WORKING_DIR_SHARED, 'css')
STORE_TEMPLATE_WORKING_DIR_SHARED_JS = File.join(STORE_TEMPLATE_WORKING_DIR_SHARED, 'js')
STORE_TEMPLATE_WORKING_DIR_SHARED_IMG = File.join(STORE_TEMPLATE_WORKING_DIR_SHARED, 'img')
STORE_TEMPLATE_WORKING_DIR_SHARED_CSS_SITE = File.join(STORE_TEMPLATE_WORKING_DIR_SHARED_CSS, 'site2.css')
SITE_DIR = File.join(ROOT_DIR, '_site')
SITE_SHARED_DIR = File.join(SITE_DIR, 'shared')
SITE_STORE_TEMPLATE = File.join(SITE_DIR, 'store-template.html')
SITE_STORE_FAVICON = File.join(SITE_DIR, 'favicon.ico')
SITE_STORE_ROBOTS = File.join(SITE_DIR, 'robots.txt')
SITE_STORE_SHOEBOX_TEMPLATE = File.join(SITE_DIR, 'shoebox-template.html')
ZIP_PATH = File.join(ROOT_DIR, 'store-template.zip')

################################################################################################
# dependencies

begin
    require 'colored'
rescue LoadError
    raise 'You must "gem install colored" to use terminal colors'
end

################################################################################################
# helpers

def die(msg, status=1)
    puts "Error[#{status||$?}]: #{msg}".red
    exit status||$?
end

def sys(cmd)
    puts "> #{cmd}".yellow
    system(cmd)
end

def patch(path, replacers)
  puts "Patching " + path.blue
  lines = []
  File.open(path, "r") do |f|
    f.each do |line|
      replacers.each do |r|
        line.gsub!(r[0], r[1])
      end
      lines << line
    end
  end
  File.open(path, "w") do |f|
    f << lines.join
  end
end

def prune_shared(dir)
  img_dir = File.join(dir, 'img')
  css_dir = File.join(dir, 'css')
  js_dir = File.join(dir, 'js')
  sys("rm -rf \"#{img_dir}/overlay\"")
  sys("rm -rf \"#{img_dir}/scrollable\"")
  sys("rm -rf \"#{img_dir}/tabs\"")
  sys("rm -rf \"#{img_dir}/flags\"")
  sys("rm -rf \"#{img_dir}/icons\"")
  sys("rm -rf \"#{css_dir}/nib\"")
  sys("rm \"#{css_dir}/\"*.styl")
  sys("rm \"#{css_dir}/\"site.css")
  sys("rm \"#{css_dir}/\"syntax.css")
  sys("rm \"#{img_dir}/totalterminal-\"*")
  sys("rm \"#{img_dir}/totalfinder-\"*")
  sys("rm \"#{img_dir}/visor-\"*")
  sys("rm \"#{img_dir}/firequery-\"*")
  sys("rm \"#{img_dir}/drydrop-\"*")
  sys("rm \"#{img_dir}/xrefresh-\"*")
  sys("rm \"#{img_dir}/firelogger-\"*")
  sys("rm \"#{img_dir}/firepython-\"*")
  sys("rm \"#{img_dir}/firerainbow-\"*")
  sys("rm \"#{img_dir}/firelogger4php-\"*")
  sys("rm \"#{img_dir}/osx\"*")
  sys("rm \"#{img_dir}/ffintro\"*")
  sys("rm \"#{img_dir}/about-photo\"*")
  sys("rm \"#{img_dir}/howto\"*")
  sys("rm \"#{img_dir}/nbair\"*")
  sys("rm \"#{img_dir}/matrix\"*")
  sys("rm \"#{img_dir}/chimp\"*")
  sys("rm \"#{js_dir}/code.js\"")
end


################################################################################################
# tasks

desc "generate shoebox template into _shoeboxtemplate"
task :shoebox do 
    # build the site using jekyll
    sys("rm -rf \"#{SITE_DIR}\"")
    sys('jekyll')
  
    # copy interesting parts
    sys("rm -rf \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")
    sys("mkdir -p \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")
    sys("cp -r \"#{SITE_SHARED_DIR}\" \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")
    sys("cp \"#{SITE_STORE_FAVICON}\" \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")
    sys("cp \"#{SITE_STORE_ROBOTS}\" \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")
    sys("cp \"#{SITE_STORE_SHOEBOX_TEMPLATE}\" \"#{SHOEBOX_TEMPLATE_WORKING_DIR}\"")

    patch(File.join(SHOEBOX_TEMPLATE_WORKING_DIR, 'shoebox-template.html'), [
        [/<body(.*?)>/, "<body\\1><div id=\"page-shoebox-template\">"],
        ["</body>", "</div></body>"],
        [/<link(.*?)([\/]{0,1})>/, "<link\\1/>"],
        [/<img(.*?)([\/]{0,1})>/, "<img\\1/>"],
        [/href="\/([^\/])/, "href=\"\\1"],
        [/src="\/([^\/])/, "src=\"\\1"]
    ])

    # fix paths in CSS
    patch(File.join(SHOEBOX_TEMPLATE_WORKING_DIR, 'shared', 'css', 'site2.css'), [
        [/\/shared\//, "../"]
    ])

    # clean up shared folder to reduce size
    prune_shared(SHOEBOX_TEMPLATE_WORKING_DIR_SHARED)
end

desc "generate store template zip" # see https://springboard.fastspring.com/site/configuration/template/doc/templateOverview.xml
task :store do 
    # build the site using jekyll
    sys("rm -rf \"#{SITE_DIR}\"")
    sys('jekyll')

    # copy interesting parts
    sys("rm -rf \"#{STORE_TEMPLATE_WORKING_DIR}\"")
    sys("mkdir -p \"#{STORE_TEMPLATE_WORKING_DIR}\"")
    sys("cp -r \"#{SITE_SHARED_DIR}\" \"#{STORE_TEMPLATE_WORKING_DIR}\"")
    sys("cp \"#{SITE_STORE_TEMPLATE}\" \"#{STORE_TEMPLATE_WORKING_DIR_WINDOW}\"")
    sys("cp \"#{SITE_STORE_FAVICON}\" \"#{STORE_TEMPLATE_WORKING_DIR}\"")
    sys("cp \"#{SITE_STORE_ROBOTS}\" \"#{STORE_TEMPLATE_WORKING_DIR}\"")

    # make our HTML valid XHTML
    patch(STORE_TEMPLATE_WORKING_DIR_WINDOW, [
        ["<!DOCTYPE html>", ""],
        ["<html ", "<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      "],
        [/<body(.*?)>/, "<body\\1><div id=\"page-store-template\">"],
        ["</body>", "</div></body>"],
        [/<script(.*?)>/, "<script\\1>//<![CDATA[\n"],
        [/<\/script>/, "\n//]]></script>"],
        [/<link(.*?)([\/]{0,1})>/, "<link\\1/>"],
        [/<img(.*?)([\/]{0,1})>/, "<img\\1/>"],
        [/<br>/, "<br/>"],
        [/href="\/([^\/])/, "href=\"\\1"],
        [/src="\/([^\/])/, "src=\"\\1"],
        ["&nbsp;", "&#160;"],
        ["&copy;", "&#169;"],
        ["##INSERT STORE CONTENT HERE##", "\n<!-- TemplateBeginEditable name=\"Content\" -->\n\n<!-- TemplateEndEditable -->"],
        ["</title>", "</title>\n<link title=\"main\" rel=\"stylesheet\" href=\"http://resource.fastspring.com/app/s/style/base.css\" media=\"screen,projection\" type=\"text/css\" />\n<link title=\"main\" rel=\"stylesheet\" href=\"http://resource.fastspring.com/app/store/style/base.css\" media=\"screen,projection\" type=\"text/css\" />"]
    ])
    
    content = File.read(STORE_TEMPLATE_WORKING_DIR_WINDOW)
    content.gsub!(/<!-- SCRIPTS START -->(.*?)<!-- SCRIPTS END -->(.*?)<body(.*?)>/m, "\\2<body\\3>\\1")
    content.gsub!(/src="\/\/cdn\.optimizely\.com/m, "src=\"https://cdn.optimizely.com") # FastSpring tries to be too smart during upload and removes non-resolvable urls with unknown.gif
    content.gsub!(/src="http:/m, "src=\"https:")
    File.open(STORE_TEMPLATE_WORKING_DIR_WINDOW, "w") do |f|
      f << content
    end

    # fix paths in CSS
    patch(STORE_TEMPLATE_WORKING_DIR_SHARED_CSS_SITE, [
        [/\/shared\//, "../"]
    ])
    
    # clean up shared folder to reduce size
    prune_shared(STORE_TEMPLATE_WORKING_DIR_SHARED)
    
    # zip it!
    sys("rm \"#{ZIP_PATH}\"") # clean!
    Dir.chdir(STORE_TEMPLATE_WORKING_DIR) do
        sys("zip -r \"#{ZIP_PATH}\" .")
    end
    
    puts "Store template is in " + ZIP_PATH.green + ". Don't forget to upload it to FastSpring"
end

desc "generate 404.html and copy it to all subdomains"
task :error404 do 
    # build the site using jekyll
    sys("rm -rf \"#{SITE_DIR}\"")
    sys("rm 404.html")
    sys('jekyll')
    
    page = File.join(SITE_DIR, "404.html")
    die("something went wrong, page #{page} does not exist") unless File.exists?(page)
    
    Dir.glob(File.join(ROOT_DIR, "..", "*")) do |path|
        next unless File.directory?(path)
        dir = File.expand_path(path)
        sys("cp \"#{page}\" \"#{dir}\"")
    end
end

task :default => :store